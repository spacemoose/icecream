
env: # important, even though empty!

matrix:
  include:
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: gcc
    dist: trusty
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: clang
    dist: trusty
  - os: osx
    before_install:
      - brew update
      - brew install lzo docbook2x gdb ccache
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: clang
    env: VALGRIND=1
    dist: trusty
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: clang
    env: BUILD_TYPE=asan
    dist: trusty
    # Sanitizer builds with newer travis fail for unknown reason without giving any message.
    group: deprecated-2017Q4
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: clang
    env: BUILD_TYPE=lsan
    dist: trusty
    group: deprecated-2017Q4
  - os: linux
    sudo: true # for setcap so we can run the tests in chroot.
    compiler: clang
    env: BUILD_TYPE=ubsan
    dist: trusty
  - os: osx
    before_install:
      - brew update
      - brew install lzo docbook2x
  - compiler: gcc
    env: BUILD_TYPE=cmake
    script:
      - mkdir build
      - cd build
      - mkdir -p external/cmake
      - pushd external/cmake
      - wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      - chmod +x cmake-*-Linux-x86_64.sh
      - ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      - export PATH="${PWD}/bin:$PATH"
      - popd
      - cmake -DBUILD_EXPIRIMENTAL=true ..
      - make -j 4 VERBOSE=1
      - echo "tests not yet attempted"
  allow_failures:
  - compiler: clang
    env: BUILD_TYPE=lsan
  - compiler: gcc
    env: BUILD_TYPE=cmake

before_script:
  - |
     if [ "$BUILD_TYPE" == "asan" ]; then
         export SAN_FLAGS="-fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer"
     fi
  - |
     if [ "$BUILD_TYPE" == "lsan" ]; then
         export SAN_FLAGS="-fsanitize=leak -fno-omit-frame-pointer"
     fi
  - |
     if [ "$BUILD_TYPE" == "msan" ]; then
         export SAN_FLAGS="-fsanitize=memory-fno-omit-frame-pointer"
     fi
  - |
     if [ "$BUILD_TYPE" == "ubsan" ]; then
         export SAN_FLAGS="-fsanitize=undefined -fno-omit-frame-pointer"
         export LDFLAGS="$UBSAN_FLAGS ${LDFLAGS}"
         export UBSAN_OPTIONS=print_stacktrace=1
     fi
  - |
      export CFLAGS="${SAN_FLAGS} ${CFLAGS} -Wall -Wextra"
      export CXXFLAGS="${SAN_FLAGS} ${CXXFLAGS} -Wall -Wextra"
      export LDFLAGS="${SAN_FLAGS} ${LDFLAGS}"


addons:
  apt:
    packages:
    - clang
    - cmake
    - gcc
    - libcap-ng-dev
    - libcap-ng-utils
    - liblzo2-dev
    - docbook2x
    - realpath
    - gdb
    - valgrind
